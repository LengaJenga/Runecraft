import{S as f,W as m,O as w,P as p,M as g,G as h,D as d,T as S,N as v}from"./vendor.4d0d6236.js";const y=function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))c(e);new MutationObserver(e=>{for(const r of e)if(r.type==="childList")for(const i of r.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&c(i)}).observe(document,{childList:!0,subtree:!0});function o(e){const r={};return e.integrity&&(r.integrity=e.integrity),e.referrerpolicy&&(r.referrerPolicy=e.referrerpolicy),e.crossorigin==="use-credentials"?r.credentials="include":e.crossorigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function c(e){if(e.ep)return;e.ep=!0;const r=o(e);fetch(e.href,r)}};y();function x(){const n=new m({canvas:document.querySelector("#bg"),alpha:!0});return n.setPixelRatio(window.devicePixelRatio),n.setSize(window.innerWidth,window.innerHeight),n}function L(){return new f}function M(n){const t=window.innerWidth,o=window.innerHeight;n.setSize(t,o)}function b(){const n=new p(75,window.innerWidth/window.innerHeight,.1,1e3);return n.position.setZ(35),n}function R(n,t){return new w(n,t.domElement)}function k(n,t,o){new h().load("/Resources/Models/Steve/scene.gltf",function(e){console.log("Steve model loaded successfully");let r=e.scene;r.traverse(function(i){i.isMesh&&(i.material=t,i.material.side=d)}),n.children.length!==1&&n.add(r),o&&o(r)},function(e){console.log("Steve model "+e.loaded/e.total*100+"% loaded")},function(e){console.error("Error loading Steve model:",e)})}function O(){const n=new S;console.log("Attempting to load skin texture from /Resources/Textures/Skin.png");const t=n.load("/Resources/Textures/Skin.png",function(){console.log("Skin texture loaded successfully")},void 0,function(o){console.error("Error loading skin texture:",o)});return t.transparent=!0,t.side=d,t.flipY=!1,t.magFilter=v,new g({map:t,transparent:!0,alphaTest:!0})}console.log("main.js loaded");const l=L(),a=x(),s=b(),T=R(s,a);a.render(l,s);const P=O();k(l,P,n=>{});function W(){M(a),s.aspect=window.innerWidth/window.innerHeight,s.updateProjectionMatrix()}window.addEventListener("resize",W);function u(){requestAnimationFrame(u),T.update(),a.render(l,s)}u();
